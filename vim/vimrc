set nocompatible              " be iMproved
" Plug
call plug#begin()
Plug 'VundleVim/Vundle.vim'
Plug 'sheerun/vim-polyglot'
Plug 'vim-scripts/bats.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-rooter'
Plug 'embear/vim-localvimrc'
Plug 'vimwiki/vimwiki'
Plug 'junegunn/fzf.vim'
Plug 'vim-test/vim-test'
Plug 'SirVer/ultisnips'
Plug 'powerman/vim-plugin-autosess'
Plug 'lyokha/vim-xkbswitch'
Plug 'eugenesqr/vim-arg-wrap'
Plug 'eugenesqr/molokai'
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'mattn/vim-lsp-settings'
call plug#end()

let mapleader=","

" use system clipboard for yanks (y) and pastes (p)
set clipboard=unnamedplus

" Keymap
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=-1

" Appearance
syntax enable
colorscheme molokai

" Line numbers
set number norelativenumber

" indentation all
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab

" max line length indication according to PEP8
set colorcolumn=100
set cursorline

" highlight bracket pairs
hi MatchParen cterm=bold ctermbg=none ctermfg=none

" viminfo location
set viminfo+=n~/.vim/viminfo
" swap files and autosave
set noswapfile
autocmd TextChanged,InsertLeave * update

" file types
autocmd FileType make setlocal noexpandtab
autocmd FileType html setlocal shiftwidth=2 tabstop=2

" search
set incsearch
set ignorecase
set hlsearch
" show pattern matches count
set shortmess-=S

" discart unsaved buffers (usually temp ones) and quit. Don't use without autosave.
nnoremap ZZ :qa!<CR>

nnoremap ,<space> :nohlsearch<CR>

" spellcheck (make sure Russian dictionary is set up)
nnoremap <F5> :setlocal spell! spelllang=en_us<CR>
nnoremap <F6> :setlocal spell! spelllang=ru_ru<CR>

" folding
set foldmethod=manual
set foldlevelstart=1

let xml_syntax_folding=1

" unload current buffer without closing the window
nnoremap <leader>bd :bp\|bd#<CR>
" unload all buffers except the current one
nnoremap <leader>bD :%bd\|e#<CR>

" fzf.vim
" list files in CWD
nnoremap <leader>k :Files!<CR>
" list files in the current buffer's directory
nnoremap <leader>K :Files! %:h<CR>
" list previously opened files (buffers)
nnoremap <leader>p :Buffers!<CR>
" text search
function! TextSearchCWD()
    " search text in CWD files (recursive)
    execute "Rg! ".input("rg (cwd): ")
endfunction
function! TextSearchLocal()
    " serch text in the current buffer's directory files (recursive)
    let cwd = getcwd()
    let search_dir = expand("%:p:h")
    let search_pattern = input("rg (local): ")
    execute "lcd ".search_dir
    execute "Rg! ".search_pattern
    execute "lcd ".cwd
endfunction
nnoremap <leader>f :call TextSearchCWD()<CR>
nnoremap <leader>F :call TextSearchLocal()<CR>

" fzf horizontal preview window for side-by-side diffs
nnoremap <leader>d :call fzf#vim#gitfiles(
            \'?',
            \fzf#vim#with_preview({"placeholder": ""}, 'up,70%', 'ctrl-/'),
            \v:true)<CR>

" vim-fugitive
set diffopt +=vertical
function! ToggleGStatus()
    if buflisted(bufname('.git*//'))
        bd .git*//
    else
        G
        normal! 6G
    endif
endfunction
nnoremap <leader>s :call ToggleGStatus()<CR>
augroup custom_fugitive_mappings
    " delete custom_fugitive_mappings to avoid double runs
    au!
    " map 'S' to stage all in git status window
    au User FugitiveIndex nnoremap <buffer> S :Git add .<cr>
augroup END

" vim-localvimrc and vim-rooter
let g:localvimrc_name = ['.vimproject']
let g:localvimrc_ask= 0
let g:localvimrc_sandbox = 0
let g:rooter_patterns = ['.vimproject']
autocmd BufRead,BufNewFile .vimproject set syntax=vim

" Airline
" displaying mode in command line is redundant with airline
set noshowmode
let g:airline_theme='molokai'
let g:airline_powerline_fonts = 1
let g:airline_detect_modified = 0
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.maxlinenr= ''
let g:airline_symbols.colnr= ':'
" branch name occupies too much space, disable it in favor of file names
let g:airline#extensions#branch#enabled = 0
" LSP errors are too distracting
let g:airline#extensions#lsp#enabled = 0

" vim-arg-wrap
nnoremap <leader>j :WrapArgs<cr>
nnoremap <leader>J :WrapArgsBack<cr>

" vimwiki
let g:vimwiki_global_ext = 0
let g:vimwiki_dir_link = 'index'
let g:vimwiki_list = [{'path': '~/Documents/private/',
                      \ 'syntax': 'markdown', 'ext': '.md'}]

" vim-test
nnoremap <leader>t :w<CR> :TestNearest<CR>
let test#python#pytest#options = '-svx'

" vim-xkbswitch
let g:XkbSwitchEnabled = 1

" vim-lsp
let g:lsp_use_native_client = 1
let g:lsp_diagnostics_signs_enabled = 0
let g:lsp_diagnostics_virtual_text_enabled = 0
let g:lsp_diagnostics_highlights_enabled = 0
let g:lsp_document_code_action_signs_enabled = 0
let g:lsp_signature_help_enabled = 0
nnoremap <leader>g <plug>(lsp-definition)
nnoremap <leader>Gu <plug>(lsp-references)
nnoremap <leader>r <plug>(lsp-rename)

" vim-lsp-settings
let g:lsp_settings_enable_suggestions = 0

" asynccomplete
let g:asyncomplete_auto_popup = 0
