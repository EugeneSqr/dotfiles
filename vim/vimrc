set nocompatible              " be iMproved
" Vundle
filetype off                  " required!
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'sheerun/vim-polyglot'
Plugin 'vim-scripts/bats.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tomtom/tcomment_vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-rooter'
Plugin 'embear/vim-localvimrc'
Plugin 'vimwiki/vimwiki'
Plugin 'junegunn/fzf.vim'
Plugin 'vim-test/vim-test'
Plugin 'SirVer/ultisnips'
Plugin 'davidhalter/jedi-vim'
Plugin 'eugenesqr/vim-arg-wrap'
Plugin 'eugenesqr/molokai'
call vundle#end()
filetype plugin indent on     " required!

let mapleader=","

" use system clipboard for yanks (y) and pastes (p)
set clipboard=unnamedplus

" Keymap
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=-1

" Appearance
syntax enable
colorscheme molokai

" Line numbers
set number norelativenumber

" indentation all
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab

" max line length indication according to PEP8
set colorcolumn=100
set cursorline

" highlight bracket pairs
hi MatchParen cterm=bold ctermbg=none ctermfg=none

" viminfo location
set viminfo+=n~/.vim/viminfo
" swap files and autosave
set noswapfile
autocmd TextChanged,InsertLeave * update

" file types
autocmd FileType make setlocal noexpandtab
autocmd FileType html setlocal shiftwidth=2 tabstop=2

" search
set incsearch
set ignorecase
set hlsearch
nnoremap ,<space> :nohlsearch<CR>

" go to tag (single match), present list otherwise
nnoremap <C-]> g<C-]>

" spellcheck (make sure Russian dictionary is set up)
nnoremap <F5> :setlocal spell! spelllang=en_us<CR>
nnoremap <F6> :setlocal spell! spelllang=ru_ru<CR>

" switch windows
nnoremap <silent> <Tab> :wincmd w<CR>

" folding
set foldmethod=manual
set foldlevelstart=1

let xml_syntax_folding=1

" delete current buffer keeping the split
nnoremap <leader>bd :bp\|bd#<CR>
" delete all buffers but the current one
nnoremap <leader>bD :%bd\|e#<CR>

" fzf.vim
nnoremap <leader>k :Files!<CR>
nnoremap <leader>; :Buffers!<CR>
nnoremap <leader>f :Rg!<space>
nnoremap <leader>S :GFiles!?<CR>
" fzf preview window scrolling like in vim
let $FZF_DEFAULT_OPTS="--bind ctrl-k:preview-up,ctrl-j:preview-down,
\ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down"

" vim-fugitive
set diffopt +=vertical
function! ToggleGStatus()
    if buflisted(bufname('.git*//'))
        bd .git*//
    else
        G
        normal! 6G
    endif
endfunction
function! ToggleGDiff()
    if buflisted(bufname('.git*//?'))
        bd .git*//?
    else
        only
        Gdiff
    endif
endfunction
nnoremap <leader>s :call ToggleGStatus()<CR>
nnoremap <leader>d :call ToggleGDiff()<CR>
augroup custom_fugitive_mappings
    " delete custom_fugitive_mappings to avoid double runs
    au!
    " map 'A' to stage all in git status window
    au User FugitiveIndex nnoremap <buffer> A :Git add .<cr>
augroup END

" vim-localvimrc and vim-rooter
let g:localvimrc_name = ['.vimproject']
let g:localvimrc_ask= 0
let g:localvimrc_sandbox = 0
let g:rooter_patterns = ['.vimproject']
autocmd BufRead,BufNewFile .vimproject set syntax=vim

" Airline
let g:airline_theme='molokai'
let g:airline_powerline_fonts = 1
let g:airline_detect_modified = 0
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.maxlinenr= ''
let g:airline_symbols.colnr= ':'

" vim-arg-wrap
nnoremap <leader>j :WrapArgs<cr>
nnoremap <leader>J :WrapArgsBack<cr>

" vimwiki
let g:vimwiki_global_ext = 0
let g:vimwiki_list = [{'path': '~/Documents/private/',
                      \ 'syntax': 'markdown', 'ext': '.md'}]

" jedi-vim
let g:jedi#popup_on_dot = 0
let g:jedi#show_call_signatures = 0
let g:jedi#completions_command = "<C-n>"
let g:jedi#goto_command = "<leader>g"
let g:jedi#goto_assignments_command = "<leader>Gg"
let g:jedi#goto_stubs_command = "<leader>Gs"
let g:jedi#usages_command = "<leader>Gu"

" run commands silently (returns back to vim right after command completion)
" usage example with binding :Silent !ls
" nnoremap <silent> <leader>vv :Silent :grep -ir <cword> ./<CR>:cw<CR>
command! -nargs=+ Silent execute 'silent <args>' | redraw!
